<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.king.function</groupId>
    <artifactId>functions</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <java.version>1.8</java.version>
        <!-- Docker镜像上传的用户名 -->
        <docker.image.prefix>lian jin</docker.image.prefix>
        <function.path.root>E:\idea\functions</function.path.root>
        <function.excel>E:\idea\functions\excel</function.excel>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <modules>
        <module>start</module>
        <module>excel</module>
        <module>common</module>
    </modules>

    <dependencies>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.4</version>
        </dependency>
        <!--        mybatis-plus-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>3.2.0</version>
        </dependency>
        <!--            AOP-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!--        JSON-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.4</version>
        </dependency>
        <!--mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--日志-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.25</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.collections</groupId>
            <artifactId>google-collections</artifactId>
            <version>1.0</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!--            poi-->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>3.17</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>3.17</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>3.17</version>
            </dependency>
            <!--反射-->
            <!--java反射-->
            <dependency>
                <groupId>javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>3.8.0.GA</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>spring</id>
            <url>https://maven.aliyun.com/repository/spring</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>


        <plugins>
            <!--编译配置-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <!--编译依赖的包-->
                        <extdirs>${function.path.root}/lib</extdirs>
                    </compilerArguments>
                </configuration>
            </plugin>

            <!--配置打包为jar包的输出路径-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!-- 指定打包的jar包输出路径-->
                    <outputDirectory>${function.path.root}/jar</outputDirectory>
                </configuration>
            </plugin>

            <!--将依赖包导出到指定路径-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--依赖包导出到指定路径-->
                            <outputDirectory>${function.path.root}/lib</outputDirectory>
                            <excludeGroupIds>com.king.functions</excludeGroupIds>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--docker-->
            <!--            <plugin>-->
            <!--                <groupId>com.spotify</groupId>-->
            <!--                <artifactId>docker-maven-plugin</artifactId>-->
            <!--                <version>1.0.0</version>-->
            <!--                <configuration>-->
            <!--                    &lt;!&ndash; 镜像名称 &ndash;&gt;-->
            <!--                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
            <!--                    &lt;!&ndash; 指定标签 &ndash;&gt;-->
            <!--                    <imageTags>-->
            <!--                        <imageTag>latest</imageTag>-->
            <!--                    </imageTags>-->
            <!--                    &lt;!&ndash; 基础镜像版本JDK1.8 &ndash;&gt;-->
            <!--                    <baseImage>java</baseImage>-->
            <!--                    &lt;!&ndash; 作者本人信息 &ndash;&gt;-->
            <!--                    <maintainer>965853365@qq.com</maintainer>-->
            <!--                    &lt;!&ndash; 切换到ROOT目录 &ndash;&gt;-->
            <!--                    <workdir>/ROOT</workdir>-->
            <!--                    <cmd>["java", "-version"]</cmd>-->
            <!--                    <entryPoint>["java", "-jar", "excel-1.0-SNAPSHOT.jar"]</entryPoint>-->

            <!--                    &lt;!&ndash; 指定 DockerFile路径 &ndash;&gt;-->
            <!--                    <dockerDirectory>${function.path.root}/docker</dockerDirectory>-->
            <!--                    &lt;!&ndash; 指定远程 Docker api地址 &ndash;&gt;-->
            <!--                    <dockerHost>http://localhost</dockerHost>-->

            <!--                    &lt;!&ndash; 复制Jar包到指定的Docker容器 &ndash;&gt;-->
            <!--                    <resources>-->
            <!--                        <resource>-->
            <!--                            <targetPath>/ROOT</targetPath>-->
            <!--                            &lt;!&ndash;用于指定需要复制的根目录，${project.build.directory}表示target目录&ndash;&gt;-->
            <!--                            <directory>E:\\idea\\functions\\excel\\target</directory>-->
            <!--                            &lt;!&ndash;用于指定需要复制的文件。${project.build.finalName}.jar指的是打包后的jar包文件。&ndash;&gt;-->
            <!--                            <include>${function.path.root}/jar/excel-1.0-SNAPSHOT.jar</include>-->
            <!--                        </resource>-->
            <!--                    </resources>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    &lt;!&ndash; 当执行maven package时执行maven clean package：build&ndash;&gt;-->
            <!--                    <execution>-->
            <!--                        <id>build-image</id>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>build</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
        </plugins>
    </build>

</project>